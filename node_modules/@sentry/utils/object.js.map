{"version":3,"file":"object.js","sourceRoot":"","sources":["src/object.ts"],"names":[],"mappings":"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","sourcesContent":["import { SentryWrappedFunction } from '@sentry/types';\nimport { isNaN, isPlainObject, isPrimitive, isUndefined } from './is';\nimport { Memo } from './memo';\nimport { truncate } from './string';\n\n/**\n * Just an Error object with arbitrary attributes attached to it.\n */\ninterface ExtendedError extends Error {\n  [key: string]: any;\n}\n\n/**\n * Serializes the given object into a string.\n * Like JSON.stringify, but doesn't throw on circular references.\n *\n * @param object A JSON-serializable object.\n * @returns A string containing the serialized object.\n */\nexport function serialize<T>(object: T): string {\n  return JSON.stringify(object, serializer({ normalize: false }));\n}\n\n/**\n * Deserializes an object from a string previously serialized with\n * {@link serialize}.\n *\n * @param str A serialized object.\n * @returns The deserialized object.\n */\nexport function deserialize<T>(str: string): T {\n  return JSON.parse(str) as T;\n}\n\n/**\n * Creates a deep copy of the given object.\n *\n * The object must be serializable, i.e.:\n *  - It must not contain any cycles\n *  - Only primitive types are allowed (object, array, number, string, boolean)\n *  - Its depth should be considerably low for performance reasons\n *\n * @param object A JSON-serializable object.\n * @returns The object clone.\n */\nexport function clone<T>(object: T): T {\n  return deserialize(serialize(object));\n}\n\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\n\nexport function fill(source: { [key: string]: any }, name: string, replacement: (...args: any[]) => any): void {\n  if (!(name in source) || (source[name] as SentryWrappedFunction).__sentry__) {\n    return;\n  }\n  const original = source[name] as () => any;\n  const wrapped = replacement(original) as SentryWrappedFunction;\n  wrapped.__sentry__ = true;\n  wrapped.__sentry_original__ = original;\n  wrapped.__sentry_wrapped__ = wrapped;\n  source[name] = wrapped;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(\n      // tslint:disable-next-line:no-unsafe-any\n      key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`,\n    )\n    .join('&');\n}\n\n// Default Node.js REPL depth\nconst MAX_SERIALIZE_EXCEPTION_DEPTH = 3;\n// 100kB, as 200kB is max payload size, so half sounds reasonable\nconst MAX_SERIALIZE_EXCEPTION_SIZE = 100 * 1024;\nconst MAX_SERIALIZE_KEYS_LENGTH = 40;\n\n/** JSDoc */\nfunction utf8Length(value: string): number {\n  // tslint:disable-next-line:no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** JSDoc */\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/** JSDoc */\nfunction serializeValue<T>(value: T): T | string {\n  const type = Object.prototype.toString.call(value);\n\n  if (typeof value === 'string') {\n    return truncate(value, 40);\n  } else if (type === '[object Object]') {\n    // Node.js REPL notation\n    return '[Object]';\n  } else if (type === '[object Array]') {\n    // Node.js REPL notation\n    return '[Array]';\n  } else {\n    return normalizeValue(value) as T;\n  }\n}\n\n/** JSDoc */\nexport function serializeObject<T>(value: T, depth: number): T | string | {} {\n  if (depth === 0) {\n    return serializeValue(value);\n  }\n\n  if (isPlainObject(value)) {\n    const serialized: { [key: string]: any } = {};\n    const val = value as {\n      [key: string]: any;\n    };\n\n    Object.keys(val).forEach((key: string) => {\n      serialized[key] = serializeObject(val[key], depth - 1);\n    });\n\n    return serialized;\n  } else if (Array.isArray(value)) {\n    const val = (value as any) as T[];\n    return val.map(v => serializeObject(v, depth - 1));\n  }\n\n  return serializeValue(value);\n}\n\n/** JSDoc */\nexport function limitObjectDepthToSize<T>(\n  object: { [key: string]: any },\n  depth: number = MAX_SERIALIZE_EXCEPTION_DEPTH,\n  maxSize: number = MAX_SERIALIZE_EXCEPTION_SIZE,\n): T {\n  const serialized = serializeObject(object, depth);\n\n  if (jsonSize(serialize(serialized)) > maxSize) {\n    return limitObjectDepthToSize(object, depth - 1);\n  }\n\n  return serialized as T;\n}\n\n/** JSDoc */\nexport function serializeKeysToEventMessage(keys: string[], maxLength: number = MAX_SERIALIZE_KEYS_LENGTH): string {\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\n/** JSDoc */\nexport function assign(target: any, ...args: any[]): object {\n  if (target === null || target === undefined) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const to = Object(target) as {\n    [key: string]: any;\n  };\n\n  // tslint:disable-next-line\n  for (let i = 0; i < args.length; i++) {\n    const source = args[i];\n    if (source !== null) {\n      for (const nextKey in source as {\n        [key: string]: any;\n      }) {\n        if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n          to[nextKey] = (source as {\n            [key: string]: any;\n          })[nextKey];\n        }\n      }\n    }\n  }\n\n  return to;\n}\n\n/**\n * Transforms Error object into an object literal with all it's attributes\n * attached to it.\n *\n * Based on: https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106\n *\n * @param error An Error containing all relevant information\n * @returns An object with all error properties\n */\nfunction objectifyError(error: ExtendedError): object {\n  // These properties are implemented as magical getters and don't show up in `for-in` loop\n  const err: {\n    stack: string | undefined;\n    message: string;\n    name: string;\n    [key: string]: any;\n  } = {\n    message: error.message,\n    name: error.name,\n    stack: error.stack,\n  };\n\n  for (const i in error) {\n    if (Object.prototype.hasOwnProperty.call(error, i)) {\n      err[i] = error[i];\n    }\n  }\n\n  return err;\n}\n\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue(value: any, key?: any): any {\n  if (key === 'domain' && typeof value === 'object' && (value as { _events: any })._events) {\n    return '[Domain]';\n  }\n\n  if (key === 'domainEmitter') {\n    return '[DomainEmitter]';\n  }\n\n  if (typeof (global as any) !== 'undefined' && value === global) {\n    return '[Global]';\n  }\n\n  if (typeof (window as any) !== 'undefined' && value === window) {\n    return '[Window]';\n  }\n\n  if (typeof (document as any) !== 'undefined' && value === document) {\n    return '[Document]';\n  }\n\n  if (value instanceof Date) {\n    return `[Date] ${value}`;\n  }\n\n  if (value instanceof Error) {\n    return objectifyError(value);\n  }\n\n  // tslint:disable-next-line:strict-type-predicates\n  if (typeof Event !== 'undefined' && value instanceof Event) {\n    return Object.getPrototypeOf(value) ? value.constructor.name : 'Event';\n  }\n\n  if (isNaN(value)) {\n    return '[NaN]';\n  }\n\n  if (isUndefined(value)) {\n    return '[undefined]';\n  }\n\n  if (typeof value === 'function') {\n    return `[Function: ${(value as () => void).name || '<unknown-function-name>'}]`;\n  }\n\n  return value;\n}\n\n/**\n * Decycles an object to make it safe for json serialization.\n *\n * @param obj Object to be decycled\n * @param memo Optional Memo class handling decycling\n */\nfunction decycle(obj: any, memo: Memo = new Memo()): any {\n  if (!isPrimitive(obj)) {\n    if (memo.memoize(obj)) {\n      return '[Circular ~]';\n    }\n    // tslint:disable-next-line\n    for (const key in obj) {\n      // tslint:disable-next-line\n      obj[key] = decycle(obj[key], memo);\n    }\n    memo.unmemoize(obj);\n  }\n  return obj;\n}\n\n/**\n * serializer()\n *\n * Remove circular references,\n * translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * and takes care of Error objects serialization\n */\nfunction serializer(options: { normalize: boolean } = { normalize: true }): (key: string, value: any) => any {\n  // tslint:disable-next-line\n  return (key: string, value: object) => (options.normalize ? normalizeValue(decycle(value), key) : decycle(value));\n}\n\n/**\n * safeNormalize()\n *\n * Creates a copy of the input by applying serializer function on it and parsing it back to unify the data\n */\nexport function safeNormalize(input: any): any {\n  try {\n    return JSON.parse(JSON.stringify(input, serializer({ normalize: true })));\n  } catch (_oO) {\n    return '**non-serializable**';\n  }\n}\n"]}
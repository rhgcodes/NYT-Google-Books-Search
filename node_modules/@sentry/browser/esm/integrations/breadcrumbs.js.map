{"version":3,"file":"breadcrumbs.js","sourceRoot":"","sources":["../../src/integrations/breadcrumbs.ts"],"names":[],"mappings":"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","sourcesContent":["import { API, getCurrentHub } from '@sentry/core';\nimport { Breadcrumb, Integration, SentryBreadcrumbHint, Severity } from '@sentry/types';\nimport { isFunction, isString } from '@sentry/utils/is';\nimport { logger } from '@sentry/utils/logger';\nimport { getEventDescription, getGlobalObject, parseUrl } from '@sentry/utils/misc';\nimport { deserialize, fill, serializeObject } from '@sentry/utils/object';\nimport { includes, safeJoin } from '@sentry/utils/string';\nimport { supportsBeacon, supportsHistory, supportsNativeFetch } from '@sentry/utils/supports';\nimport { BrowserClient } from '../client';\nimport { breadcrumbEventHandler, keypressEventHandler, wrap } from './helpers';\n\nconst global = getGlobalObject() as Window;\nlet lastHref: string | undefined;\n\n/** JSDoc */\nexport interface SentryWrappedXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: any;\n  __sentry_xhr__?: {\n    method?: string;\n    url?: string;\n    status_code?: number;\n  };\n}\n\n/** JSDoc */\ninterface BreadcrumbIntegrations {\n  beacon?: boolean;\n  console?: boolean;\n  dom?: boolean;\n  fetch?: boolean;\n  history?: boolean;\n  sentry?: boolean;\n  xhr?: boolean;\n}\n\n/** Default Breadcrumbs instrumentations */\nexport class Breadcrumbs implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Breadcrumbs.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Breadcrumbs';\n\n  /** JSDoc */\n  private readonly options: BreadcrumbIntegrations;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: BreadcrumbIntegrations) {\n    this.options = {\n      beacon: true,\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /** JSDoc */\n  private instrumentBeacon(): void {\n    if (!supportsBeacon()) {\n      return;\n    }\n\n    /** JSDoc */\n    function beaconReplacementFunction(originalBeaconFunction: () => void): () => void {\n      return function(this: History, ...args: any[]): void {\n        const url = args[0];\n        const data = args[1];\n        // If the browser successfully queues the request for delivery, the method returns \"true\" and returns \"false\" otherwise.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Beacon_API/Using_the_Beacon_API\n        const result = originalBeaconFunction.apply(this, args);\n\n        const client = getCurrentHub().getClient() as BrowserClient;\n        const dsn = client && client.getDsn();\n        if (dsn) {\n          const filterUrl = new API(dsn).getStoreEndpoint();\n          // if Sentry key appears in URL, don't capture it as a request\n          // but rather as our own 'sentry' type breadcrumb\n          if (filterUrl && includes(url, filterUrl)) {\n            addSentryBreadcrumb(data);\n            return result;\n          }\n        }\n\n        // What is wrong with you TypeScript...\n        const breadcrumbData = ({\n          category: 'beacon',\n          data,\n          type: 'http',\n        } as any) as { [key: string]: any };\n\n        if (!result) {\n          breadcrumbData.level = Severity.Error;\n        }\n\n        Breadcrumbs.addBreadcrumb(breadcrumbData, {\n          input: args,\n          result,\n        });\n\n        return result;\n      };\n    }\n\n    fill(global.navigator, 'sendBeacon', beaconReplacementFunction);\n  }\n\n  /** JSDoc */\n  private instrumentConsole(): void {\n    if (!('console' in global)) {\n      return;\n    }\n    ['debug', 'info', 'warn', 'error', 'log'].forEach(function(level: string): void {\n      if (!(level in global.console)) {\n        return;\n      }\n\n      fill(global.console, level, function(originalConsoleLevel: () => any): any {\n        return function(...args: any[]): any {\n          const breadcrumbData = {\n            category: 'console',\n            data: {\n              extra: {\n                arguments: serializeObject(args, 2),\n              },\n              logger: 'console',\n            },\n            level: Severity.fromString(level),\n            message: safeJoin(args, ' '),\n          };\n\n          if (level === 'assert') {\n            if (args[0] === false) {\n              breadcrumbData.message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n              breadcrumbData.data.extra.arguments = serializeObject(args.slice(1), 2);\n            }\n          }\n\n          Breadcrumbs.addBreadcrumb(breadcrumbData, {\n            input: args,\n            level,\n          });\n\n          // this fails for some browsers. :(\n          if (originalConsoleLevel) {\n            Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n          }\n        };\n      });\n    });\n  }\n\n  /** JSDoc */\n  private instrumentDOM(): void {\n    if (!('document' in global)) {\n      return;\n    }\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    global.document.addEventListener('click', breadcrumbEventHandler('click'), false);\n    global.document.addEventListener('keypress', keypressEventHandler(), false);\n  }\n\n  /** JSDoc */\n  private instrumentFetch(): void {\n    if (!supportsNativeFetch()) {\n      return;\n    }\n\n    fill(global, 'fetch', function(originalFetch: () => void): () => void {\n      return function(...args: any[]): void {\n        const fetchInput = args[0];\n        let method = 'GET';\n        let url;\n\n        if (typeof fetchInput === 'string') {\n          url = fetchInput;\n        } else if ('Request' in global && fetchInput instanceof Request) {\n          url = fetchInput.url;\n          if (fetchInput.method) {\n            method = fetchInput.method;\n          }\n        } else {\n          url = String(fetchInput);\n        }\n\n        if (args[1] && args[1].method) {\n          method = args[1].method;\n        }\n\n        const client = getCurrentHub().getClient() as BrowserClient;\n        const dsn = client && client.getDsn();\n        if (dsn) {\n          const filterUrl = new API(dsn).getStoreEndpoint();\n          // if Sentry key appears in URL, don't capture it as a request\n          // but rather as our own 'sentry' type breadcrumb\n          if (filterUrl && includes(url, filterUrl)) {\n            if (method === 'POST' && args[1] && args[1].body) {\n              addSentryBreadcrumb(args[1].body);\n            }\n            return originalFetch.apply(global, args);\n          }\n        }\n\n        const fetchData: {\n          method: string;\n          url: string;\n          status_code?: number;\n        } = {\n          method,\n          url,\n        };\n\n        return originalFetch\n          .apply(global, args)\n          .then((response: Response) => {\n            fetchData.status_code = response.status;\n            Breadcrumbs.addBreadcrumb(\n              {\n                category: 'fetch',\n                data: fetchData,\n                type: 'http',\n              },\n              {\n                input: args,\n                response,\n              },\n            );\n            return response;\n          })\n          .catch((error: Error) => {\n            Breadcrumbs.addBreadcrumb(\n              {\n                category: 'fetch',\n                data: fetchData,\n                level: Severity.Error,\n                type: 'http',\n              },\n              {\n                error,\n                input: args,\n              },\n            );\n\n            throw error;\n          });\n      };\n    });\n  }\n\n  /** JSDoc */\n  private instrumentHistory(): void {\n    if (!supportsHistory()) {\n      return;\n    }\n\n    const captureUrlChange = (from: string | undefined, to: string | undefined): void => {\n      const parsedLoc = parseUrl(global.location.href);\n      const parsedTo = parseUrl(to as string);\n      let parsedFrom = parseUrl(from as string);\n\n      // Initial pushState doesn't provide `from` information\n      if (!parsedFrom.path) {\n        parsedFrom = parsedLoc;\n      }\n\n      // because onpopstate only tells you the \"new\" (to) value of location.href, and\n      // not the previous (from) value, we need to track the value of the current URL\n      // state ourselves\n      lastHref = to;\n\n      // Use only the path component of the URL if the URL matches the current\n      // document (almost all the time when using pushState)\n      if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        to = parsedTo.relative;\n      }\n      if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        from = parsedFrom.relative;\n      }\n\n      Breadcrumbs.addBreadcrumb({\n        category: 'navigation',\n        data: {\n          from,\n          to,\n        },\n      });\n    };\n\n    // record navigation (URL) changes\n    const oldOnPopState = global.onpopstate;\n    global.onpopstate = (...args: any[]) => {\n      const currentHref = global.location.href;\n      captureUrlChange(lastHref, currentHref);\n      if (oldOnPopState) {\n        return oldOnPopState.apply(this, args);\n      }\n    };\n\n    /** JSDoc */\n    function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n      // note history.pushState.length is 0; intentionally not declaring\n      // params to preserve 0 arity\n      return function(this: History, ...args: any[]): void {\n        const url = args.length > 2 ? args[2] : undefined;\n        // url argument is optional\n        if (url) {\n          // coerce to string (this is what pushState does)\n          captureUrlChange(lastHref, String(url));\n        }\n        return originalHistoryFunction.apply(this, args);\n      };\n    }\n\n    fill(global.history, 'pushState', historyReplacementFunction);\n    fill(global.history, 'replaceState', historyReplacementFunction);\n  }\n\n  /** JSDoc */\n  private instrumentXHR(): void {\n    if (!('XMLHttpRequest' in global)) {\n      return;\n    }\n\n    /** JSDoc */\n    function wrapProp(prop: string, xhr: XMLHttpRequest): void {\n      // TODO: Fix XHR types\n      if (prop in xhr && isFunction((xhr as { [key: string]: any })[prop])) {\n        fill(xhr, prop, original =>\n          wrap(original, {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: (original && original.name) || '<anonymous>',\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          }),\n        );\n      }\n    }\n\n    const xhrproto = XMLHttpRequest.prototype;\n    fill(\n      xhrproto,\n      'open',\n      originalOpen =>\n        function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n          const url = args[1];\n          this.__sentry_xhr__ = {\n            method: args[0],\n            url: args[1],\n          };\n\n          const client = getCurrentHub().getClient() as BrowserClient;\n          const dsn = client && client.getDsn();\n          if (dsn) {\n            const filterUrl = new API(dsn).getStoreEndpoint();\n            // if Sentry key appears in URL, don't capture it as a request\n            // but rather as our own 'sentry' type breadcrumb\n            if (isString(url) && (filterUrl && includes(url, filterUrl))) {\n              this.__sentry_own_request__ = true;\n            }\n          }\n\n          return originalOpen.apply(this, args);\n        },\n    );\n\n    fill(\n      xhrproto,\n      'send',\n      originalSend =>\n        function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n          const xhr = this; // tslint:disable-line:no-this-assignment\n\n          if (xhr.__sentry_own_request__) {\n            addSentryBreadcrumb(args[0]);\n          }\n\n          /** JSDoc */\n          function onreadystatechangeHandler(): void {\n            if (xhr.readyState === 4) {\n              if (xhr.__sentry_own_request__) {\n                return;\n              }\n              try {\n                // touching statusCode in some platforms throws\n                // an exception\n                if (xhr.__sentry_xhr__) {\n                  xhr.__sentry_xhr__.status_code = xhr.status;\n                }\n              } catch (e) {\n                /* do nothing */\n              }\n              Breadcrumbs.addBreadcrumb(\n                {\n                  category: 'xhr',\n                  data: xhr.__sentry_xhr__,\n                  type: 'http',\n                },\n                {\n                  xhr,\n                },\n              );\n            }\n          }\n\n          ['onload', 'onerror', 'onprogress'].forEach(prop => {\n            wrapProp(prop, xhr);\n          });\n\n          if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\n            fill(xhr, 'onreadystatechange', function(original: () => void): void {\n              return wrap(\n                original,\n                {\n                  mechanism: {\n                    data: {\n                      function: 'onreadystatechange',\n                      handler: (original && original.name) || '<anonymous>',\n                    },\n                    handled: true,\n                    type: 'instrument',\n                  },\n                },\n                onreadystatechangeHandler,\n              );\n            });\n          } else {\n            // if onreadystatechange wasn't actually set by the page on this xhr, we\n            // are free to set our own and capture the breadcrumb\n            xhr.onreadystatechange = onreadystatechangeHandler;\n          }\n          return originalSend.apply(this, args);\n        },\n    );\n  }\n\n  /**\n   * Helper that checks if integration is enabled on the client.\n   * @param breadcrumb Breadcrumb\n   * @param hint SentryBreadcrumbHint\n   */\n  public static addBreadcrumb(breadcrumb: Breadcrumb, hint?: SentryBreadcrumbHint): void {\n    if (getCurrentHub().getIntegration(Breadcrumbs)) {\n      getCurrentHub().addBreadcrumb(breadcrumb, hint);\n    }\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n  public setupOnce(): void {\n    if (this.options.console) {\n      this.instrumentConsole();\n    }\n    if (this.options.dom) {\n      this.instrumentDOM();\n    }\n    if (this.options.xhr) {\n      this.instrumentXHR();\n    }\n    if (this.options.fetch) {\n      this.instrumentFetch();\n    }\n    if (this.options.beacon) {\n      this.instrumentBeacon();\n    }\n    if (this.options.history) {\n      this.instrumentHistory();\n    }\n  }\n}\n\n/** JSDoc */\nfunction addSentryBreadcrumb(serializedData: string): void {\n  // There's always something that can go wrong with deserialization...\n  try {\n    const event: { [key: string]: any } = deserialize(serializedData);\n    Breadcrumbs.addBreadcrumb(\n      {\n        category: 'sentry',\n        event_id: event.event_id,\n        level: event.level || Severity.fromString('error'),\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  } catch (_oO) {\n    logger.error('Error while adding sentry type breadcrumb');\n  }\n}\n"]}
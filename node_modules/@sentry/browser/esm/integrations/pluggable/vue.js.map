{"version":3,"file":"vue.js","sourceRoot":"","sources":["../../../src/integrations/pluggable/vue.ts"],"names":[],"mappings":"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","sourcesContent":["import { captureException, getCurrentHub, withScope } from '@sentry/core';\nimport { Integration, SentryEvent } from '@sentry/types';\nimport { isPlainObject, isUndefined } from '@sentry/utils/is';\nimport { getGlobalObject } from '@sentry/utils/misc';\n\n/** JSDoc */\ninterface Metadata {\n  [key: string]: any;\n  componentName?: string;\n  propsData?: {\n    [key: string]: any;\n  };\n  lifecycleHook?: string;\n}\n\n/** JSDoc */\nexport class Vue implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Vue.id;\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Vue';\n\n  /**\n   * @inheritDoc\n   */\n  private readonly Vue: any; // tslint:disable-line:variable-name\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { Vue?: any } = {}) {\n    this.Vue =\n      options.Vue ||\n      (getGlobalObject() as {\n        Vue: any;\n      }).Vue;\n  }\n\n  /** JSDoc */\n  private formatComponentName(vm: any): string {\n    if (vm.$root === vm) {\n      return 'root instance';\n    }\n    const name = vm._isVue ? vm.$options.name || vm.$options._componentTag : vm.name;\n    return (\n      (name ? `component <${name}>` : 'anonymous component') +\n      (vm._isVue && vm.$options.__file ? ` at ${vm.$options.__file}` : '')\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    if (!this.Vue || !this.Vue.config) {\n      return;\n    }\n\n    const oldOnError = this.Vue.config.errorHandler;\n\n    this.Vue.config.errorHandler = (error: Error, vm: { [key: string]: any }, info: string): void => {\n      const metadata: Metadata = {};\n\n      if (isPlainObject(vm)) {\n        metadata.componentName = this.formatComponentName(vm);\n        metadata.propsData = vm.$options.propsData;\n      }\n\n      if (!isUndefined(info)) {\n        metadata.lifecycleHook = info;\n      }\n\n      if (getCurrentHub().getIntegration(Vue)) {\n        withScope(scope => {\n          Object.keys(metadata).forEach(key => {\n            scope.setExtra(key, metadata[key]);\n          });\n\n          scope.addEventProcessor(async (event: SentryEvent) => {\n            if (event.sdk) {\n              const integrations = event.sdk.integrations || [];\n              event.sdk = {\n                ...event.sdk,\n                integrations: [...integrations, 'vue'],\n              };\n            }\n            return event;\n          });\n\n          captureException(error);\n        });\n      }\n\n      if (typeof oldOnError === 'function') {\n        oldOnError.call(this.Vue, error, vm, info);\n      }\n    };\n  }\n}\n"]}
{"version":3,"file":"beacon.js","sourceRoot":"","sources":["../../src/transports/beacon.ts"],"names":[],"mappings":"AAAA,OAAO,EAAkB,MAAM,EAAE,MAAM,eAAe,CAAC;AACvD,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,QAAQ,CAAC;AAEvC,MAAM,MAAM,GAAG,eAAe,EAAY,CAAC;AAE3C,mCAAmC;AACnC,MAAM,OAAO,eAAgB,SAAQ,aAAa;IAChD;;OAEG;IACI,KAAK,CAAC,SAAS,CAAC,IAAY;QACjC,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CACpB,OAAO,CAAC,OAAO,CAAC;YACd,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM;SAChD,CAAC,CACH,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { SentryResponse, Status } from '@sentry/types';\nimport { getGlobalObject } from '@sentry/utils/misc';\nimport { BaseTransport } from './base';\n\nconst global = getGlobalObject() as Window;\n\n/** `sendBeacon` based transport */\nexport class BeaconTransport extends BaseTransport {\n  /**\n   * @inheritDoc\n   */\n  public async sendEvent(body: string): Promise<SentryResponse> {\n    const result = global.navigator.sendBeacon(this.url, body);\n\n    return this.buffer.add(\n      Promise.resolve({\n        status: result ? Status.Success : Status.Failed,\n      }),\n    );\n  }\n}\n"]}